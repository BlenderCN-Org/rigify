# ##### BEGIN GPL LICENSE BLOCK #####
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software Foundation,
#  Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# ##### END GPL LICENSE BLOCK #####

import bpy


def create(obj):
    # generated by rigify.utils.write_metarig
    bpy.ops.object.mode_set(mode='EDIT')
    arm = obj.data

    for i in range(28):
        arm.rigify_layers.add()

    arm.rigify_layers[0].name = "Tete"
    arm.rigify_layers[0].row = 1
    arm.rigify_layers[1].name = " "
    arm.rigify_layers[1].row = 1
    arm.rigify_layers[2].name = "Torse"
    arm.rigify_layers[2].row = 2
    arm.rigify_layers[3].name = " "
    arm.rigify_layers[3].row = 1
    arm.rigify_layers[4].name = "Bras Gauche"
    arm.rigify_layers[4].row = 3
    arm.rigify_layers[5].name = ""
    arm.rigify_layers[5].row = 1
    arm.rigify_layers[6].name = "Jambe Gauche"
    arm.rigify_layers[6].row = 4
    arm.rigify_layers[7].name = " "
    arm.rigify_layers[7].row = 1
    arm.rigify_layers[8].name = "Torse"
    arm.rigify_layers[8].row = 5
    arm.rigify_layers[9].name = " "
    arm.rigify_layers[9].row = 1
    arm.rigify_layers[10].name = " "
    arm.rigify_layers[10].row = 1
    arm.rigify_layers[11].name = " "
    arm.rigify_layers[11].row = 1
    arm.rigify_layers[12].name = " "
    arm.rigify_layers[12].row = 1
    arm.rigify_layers[13].name = " "
    arm.rigify_layers[13].row = 1
    arm.rigify_layers[14].name = " "
    arm.rigify_layers[14].row = 1
    arm.rigify_layers[15].name = " "
    arm.rigify_layers[15].row = 1
    arm.rigify_layers[16].name = " "
    arm.rigify_layers[16].row = 1
    arm.rigify_layers[17].name = " "
    arm.rigify_layers[17].row = 1
    arm.rigify_layers[18].name = " "
    arm.rigify_layers[18].row = 1
    arm.rigify_layers[19].name = " "
    arm.rigify_layers[19].row = 1
    arm.rigify_layers[20].name = "Bras Droit"
    arm.rigify_layers[20].row = 3
    arm.rigify_layers[21].name = " "
    arm.rigify_layers[21].row = 1
    arm.rigify_layers[22].name = "Jambe Droite"
    arm.rigify_layers[22].row = 4
    arm.rigify_layers[23].name = " "
    arm.rigify_layers[23].row = 1
    arm.rigify_layers[24].name = " "
    arm.rigify_layers[24].row = 1
    arm.rigify_layers[25].name = " "
    arm.rigify_layers[25].row = 1
    arm.rigify_layers[26].name = " "
    arm.rigify_layers[26].row = 1
    arm.rigify_layers[27].name = " "
    arm.rigify_layers[27].row = 1

    bones = {}

    bone = arm.edit_bones.new('Bassin')
    bone.head[:] = -0.0029, 0.0000, 0.8893
    bone.tail[:] = 0.0294, -0.0000, 1.0480
    bone.roll = -2.9413
    bone.use_connect = False
    bones['Bassin'] = bone.name
    bone = arm.edit_bones.new('Jambe haut')
    bone.head[:] = -0.0029, 0.0000, 0.8893
    bone.tail[:] = -0.0283, 0.0000, 0.4894
    bone.roll = 0.0634
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['Bassin']]
    bones['Jambe haut'] = bone.name
    bone = arm.edit_bones.new('Abdomen')
    bone.head[:] = 0.0294, -0.0000, 1.0480
    bone.tail[:] = -0.0027, 0.0000, 1.1745
    bone.roll = 2.8939
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['Bassin']]
    bones['Abdomen'] = bone.name
    bone = arm.edit_bones.new('Jambe bas')
    bone.head[:] = -0.0283, 0.0000, 0.4894
    bone.tail[:] = -0.0587, 0.0000, 0.0736
    bone.roll = 0.0731
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['Jambe haut']]
    bones['Jambe bas'] = bone.name
    bone = arm.edit_bones.new('Thorax')
    bone.head[:] = -0.0027, 0.0000, 1.1745
    bone.tail[:] = -0.0135, 0.0000, 1.3005
    bone.roll = 3.0550
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['Abdomen']]
    bones['Thorax'] = bone.name
    bone = arm.edit_bones.new('Pied')
    bone.head[:] = -0.0587, 0.0000, 0.0736
    bone.tail[:] = -0.0030, 0.0000, 0.0227
    bone.roll = -0.8301
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['Jambe bas']]
    bones['Pied'] = bone.name
    bone = arm.edit_bones.new('Talon')
    bone.head[:] = -0.0587, 0.0000, 0.0736
    bone.tail[:] = -0.0954, 0.0000, 0.0000
    bone.roll = 0.4628
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['Jambe bas']]
    bones['Talon'] = bone.name
    bone = arm.edit_bones.new('Buste')
    bone.head[:] = -0.0135, 0.0000, 1.3005
    bone.tail[:] = 0.0005, 0.0000, 1.4038
    bone.roll = -3.0064
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['Thorax']]
    bones['Buste'] = bone.name
    bone = arm.edit_bones.new('Orteil')
    bone.head[:] = -0.0030, 0.0000, 0.0227
    bone.tail[:] = 0.0558, 0.0000, 0.0000
    bone.roll = -1.2031
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['Pied']]
    bones['Orteil'] = bone.name
    bone = arm.edit_bones.new('Cou')
    bone.head[:] = 0.0005, 0.0000, 1.4038
    bone.tail[:] = 0.0271, 0.0000, 1.4720
    bone.roll = -2.7688
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['Buste']]
    bones['Cou'] = bone.name
    bone = arm.edit_bones.new('Bras haut')
    bone.head[:] = -0.0488, 0.0000, 1.3385
    bone.tail[:] = -0.0929, 0.0000, 1.1169
    bone.roll = 0.1969
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['Buste']]
    bones['Bras haut'] = bone.name
    bone = arm.edit_bones.new('Tete')
    bone.head[:] = 0.0271, 0.0000, 1.4720
    bone.tail[:] = 0.0592, 0.0000, 1.6173
    bone.roll = -2.9241
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['Cou']]
    bones['Tete'] = bone.name
    bone = arm.edit_bones.new('Bras bas')
    bone.head[:] = -0.0929, 0.0000, 1.1169
    bone.tail[:] = -0.0646, 0.0000, 0.8523
    bone.roll = -0.1069
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['Bras haut']]
    bones['Bras bas'] = bone.name
    bone = arm.edit_bones.new('Machoire')
    bone.head[:] = 0.0223, 0.0000, 1.4938
    bone.tail[:] = 0.0964, 0.0000, 1.4450
    bone.roll = -0.9887
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['Tete']]
    bones['Machoire'] = bone.name
    bone = arm.edit_bones.new('Paupiere')
    bone.head[:] = 0.0713, -0.0000, 1.5667
    bone.tail[:] = 0.1014, 0.0000, 1.5618
    bone.roll = -1.4091
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['Tete']]
    bones['Paupiere'] = bone.name
    bone = arm.edit_bones.new('Chapeau')
    bone.head[:] = 0.0432, -0.0000, 1.6260
    bone.tail[:] = 0.0432, -0.0000, 1.7549
    bone.roll = 3.1416
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['Tete']]
    bones['Chapeau'] = bone.name
    bone = arm.edit_bones.new('Main')
    bone.head[:] = -0.0646, 0.0000, 0.8523
    bone.tail[:] = -0.0646, 0.0000, 0.7518
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['Bras bas']]
    bones['Main'] = bone.name
    bone = arm.edit_bones.new('Accessoire')
    bone.head[:] = -0.1701, 0.0000, 0.7032
    bone.tail[:] = -0.3672, 0.0000, 0.0000
    bone.roll = 0.2706
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['Main']]
    bones['Accessoire'] = bone.name

    bpy.ops.object.mode_set(mode='OBJECT')
    pbone = obj.pose.bones[bones['Bassin']]
    pbone.rigify_type = 'pantin.torso'
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (True, True, True)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    try:
        pbone.rigify_parameters.Z_index = 1.0
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.flip_switch = False
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.root_name = "Racine"
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['Jambe haut']]
    pbone.rigify_type = 'pantin.leg'
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    try:
        pbone.rigify_parameters.Z_index = 2.0
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.joint_name = "Genou"
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.right_layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False]
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.pelvis_name = "Bassin"
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.duplicate_lr = True
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['Abdomen']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (True, True, True)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Jambe bas']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Thorax']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Pied']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Talon']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Buste']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Orteil']]
    pbone.rigify_type = ''
    pbone.lock_location = (True, True, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Cou']]
    pbone.rigify_type = 'pantin.head'
    pbone.lock_location = (True, True, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (True, True, True)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    try:
        pbone.rigify_parameters.Z_index = 0.0
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.flip_switch = False
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['Bras haut']]
    pbone.rigify_type = 'pantin.arm'
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    try:
        pbone.rigify_parameters.right_layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False]
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.joint_name = "Coude"
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.pelvis_name = "Bassin"
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.duplicate_lr = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.Z_index = 3.0
    except AttributeError:
        pass
    pbone = obj.pose.bones[bones['Tete']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (True, True, True)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Bras bas']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Machoire']]
    pbone.rigify_type = ''
    pbone.lock_location = (True, True, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (True, True, True)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Paupiere']]
    pbone.rigify_type = ''
    pbone.lock_location = (True, True, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Chapeau']]
    pbone.rigify_type = 'pantin.simple'
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Main']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    pbone = obj.pose.bones[bones['Accessoire']]
    pbone.rigify_type = 'pantin.simple'
    pbone.lock_location = (False, False, True)
    pbone.lock_rotation = (True, True, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'XZY'
    pbone.bone.layers = [True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
    try:
        pbone.rigify_parameters.object_side = ".R"
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.use_parent_layers = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.use_parent_Z_index = True
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.create_ik = False
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.flip_switch = False
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False]
    except AttributeError:
        pass
    try:
        pbone.rigify_parameters.pelvis_name = "Bassin"
    except AttributeError:
        pass

    bpy.ops.object.mode_set(mode='EDIT')
    for bone in arm.edit_bones:
        bone.select = False
        bone.select_head = False
        bone.select_tail = False
    for b in bones:
        bone = arm.edit_bones[bones[b]]
        bone.select = True
        bone.select_head = True
        bone.select_tail = True
        arm.edit_bones.active = bone

    arm.layers = [(x in [0, 2, 4, 6]) for x in range(32)]

    # Select proper UI template
    template_name = 'pantin_template'
    arm_templates = arm.rigify_templates.items()
    template_index = None
    for i, template in enumerate(arm_templates):
        if template[0] == template_name:
            template_index = i
            break
    if template_index is None:
        template_index = 0 # Default to something...
    else:
        arm.rigify_active_template = template_index

if __name__ == "__main__":
    create(bpy.context.active_object)
